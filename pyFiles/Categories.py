# -*- coding: utf-8 -*-
#from os import listvolumes

# Form implementation generated from reading ui file '.\Categories.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

##########################################################################
#                                                                        #
#                        UI Generation                                   #
#                                                                        #
##########################################################################
from PyQt5.QtWidgets import QMessageBox
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_dialog(object):
    def setupUi(self, dialog, listValues):
        dialog.setObjectName("dialog")
        dialog.resize(696, 551)
        self.buttonBox = QtWidgets.QDialogButtonBox(dialog)
        self.buttonBox.setGeometry(QtCore.QRect(150, 100, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.formLayoutWidget = QtWidgets.QWidget(dialog)
        self.formLayoutWidget.setGeometry(QtCore.QRect(30, 20, 461, 71))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.lblCatID = QtWidgets.QLabel(self.formLayoutWidget)
        self.lblCatID.setObjectName("lblCatID")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.lblCatID)
        self.txtCatID = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.txtCatID.setReadOnly(True)
        self.txtCatID.setObjectName("txtCatID")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.txtCatID)
        self.lblCat = QtWidgets.QLabel(self.formLayoutWidget)
        self.lblCat.setObjectName("lblCat")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.lblCat)
        self.txtCat = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.txtCat.setObjectName("txtCat")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.txtCat)

        self.retranslateUi(dialog)
        #self.buttonBox.accepted.connect(dialog.accept) # type: ignore
       # self.buttonBox.rejected.connect(dialog.reject) # type: ignore

        #code:
        self.buttonBox.clicked.connect(self.buttonBox_clicked)
        QtCore.QMetaObject.connectSlotsByName(dialog)

        #Update UI here
        self.listValues = listValues
        self.initialSetup()
        self.dialog = dialog

    def retranslateUi(self, dialog):
        _translate = QtCore.QCoreApplication.translate
        dialog.setWindowTitle(_translate("dialog", "Categories"))
        self.lblCatID.setText(_translate("dialog", "Category ID"))
        self.lblCat.setText(_translate("dialog", "Category"))


##########################################################################
#                                                                        #
#                        End UI Generation                               #
#                                                                        #
##########################################################################

    def initialSetup(self):
        self.setCatID()
        self.setValues()

    #if these buttons are clicked it'll do the proper functions
    def setupEvents(self):
        self.buttonBox.clicked.connect(self.buttonBox_clicked)

    # creating autoincrement for cat_id
    def setCatID(self):
        if self.listValues and self.listValues[0] is not None:
            self.txtCatID.setText(str(self.listValues[0]))
        else:
            self.txtCatID.setText("Auto-incrementing")

    def buttonBox_clicked(self, button):
        if self.buttonBox.button(QtWidgets.QDialogButtonBox.Ok) == button:
            if self.validateInput():
                self.dialog.accept()
        elif self.buttonBox.button(QtWidgets.QDialogButtonBox.Cancel) == button:
            self.dialog.reject()

    def validateInput(self):
        val1 = self.txtCat.text().strip()

        if val1 == "":
            QMessageBox.warning(None, "Category cannot be empty", "Please input a Category.")
            return False
        return True

    def setValues(self):
        if self.listValues == None:  #no list
            return

        self.txtCat.setText(str(self.listValues[0]))

    def getValues(self):
        listResults =[]
        listResults.append(self.txtCat.text())

        return listResults


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    dialog = QtWidgets.QDialog()
    ui = Ui_dialog()
    ui.setupUi(dialog, None)
    dialog.show()
    sys.exit(app.exec_())
